#ifndef _MatPalVert_h_
#define _MatPalVert_h_


// Header generated from binary by WriteAsBinHeader()..
static const int MatPalVertLength = 654;
static const unsigned int MatPalVert[MatPalVertLength]={
	0x20205356,	0xFFFF0008,	0x00000048,	0x01020000,	0x00000030,	0x00000053,	0x00000000,	0x00000000,	0x00000006,	0x00000003,
	0x00000002,	0x00000000,	0x00000000,	0x00000000,	0x00000002,	0x00000000,	0x000000A9,	0x00000000,	0x00000000,	0x02050000,
	0x00882100,	0x00000000,	0x04000000,	0x01010002,	0x0D086100,	0x00000000,	0x00000000,	0x06010000,	0x18800700,	0x00000000,
	0x00000000,	0x00010002,	0x0D086000,	0x00000000,	0x00000000,	0x00010000,	0x0F882100,	0x00000000,	0x01000000,	0x01010032,
	0x02082100,	0x00000000,	0x00000000,	0x02029001,	0x03702190,	0x00000000,	0x00000000,	0x00010002,	0x0D086000,	0x00000000,
	0x00000000,	0x00010000,	0x0F902100,	0x00000000,	0x01000000,	0x01010032,	0x02102155,	0x00000000,	0x00000000,	0x02050000,
	0x00882000,	0x00000000,	0x0C000000,	0x01400002,	0x0D086100,	0x00000000,	0x00000000,	0x06010000,	0x18800600,	0x00000000,
	0x00000000,	0x00010002,	0x0D086055,	0x00000000,	0x00000000,	0x00010000,	0x0F882055,	0x00000000,	0x01000000,	0x01000032,
	0x02082000,	0x00000000,	0x00000000,	0x00010002,	0x0D086055,	0x00000000,	0x00000000,	0x00010000,	0x0F902055,	0x00000000,
	0x01000000,	0x01000032,	0x02102055,	0x00000000,	0x00000000,	0x02050000,	0x00882000,	0x00000000,	0x0D000000,	0x01400002,
	0x0D086100,	0x00000000,	0x00000000,	0x06010000,	0x18800600,	0x00000000,	0x00000000,	0x00010002,	0x0D0860AA,	0x00000000,
	0x00000000,	0x00010000,	0x0F8820AA,	0x00000000,	0x01000000,	0x01000032,	0x02082000,	0x00000000,	0x00000000,	0x00010002,
	0x0D0860AA,	0x00000000,	0x00000000,	0x00010000,	0x0F9020AA,	0x00000000,	0x01000000,	0x01000032,	0x02102055,	0x00000000,
	0x00000000,	0x02050000,	0x00882000,	0x00000000,	0x0E000000,	0x01400002,	0x0D086100,	0x00000000,	0x00000000,	0x06010000,
	0x18800600,	0x00000000,	0x00000000,	0x00010002,	0x0D0860FF,	0x00000000,	0x00000000,	0x00010000,	0x0F8820FF,	0x00000000,
	0x01000000,	0x01000032,	0x02082000,	0x00000000,	0x00000000,	0x00010002,	0x0D0860FF,	0x00000000,	0x00000000,	0x00010000,
	0x0F9020FF,	0x00000000,	0x01000000,	0x01000032,	0x02102055,	0x00000000,	0x00000000,	0x024F0000,	0x00F820E4,	0x00000000,
	0x02000000,	0x01000002,	0x037820E4,	0x00000000,	0x00000000,	0x02500000,	0x20F821E4,	0x00000000,	0x02E40100,	0x01015502,
	0x0EF820E4,	0x00000000,	0x00000000,	0x02510000,	0x20F821E4,	0x00000000,	0x02E40100,	0x0101AA02,	0x0EF820E4,	0x00000000,
	0x00000000,	0x02520000,	0x20F821E4,	0x00000000,	0x02E40100,	0x0101FF02,	0x0EF800E4,	0x00000000,	0x00000000,	0x00040000,
	0x00F801E4,	0x00000000,	0x00000000,	0x00050000,	0x00F802E4,	0x00000000,	0x00000000,	0x00000000,	0x1E000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x3F800000,	0x3F800000,	0x3F800000,	0x3F800000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x3F800000,	0x00000000,	0x00000000,	0x00000000,	0x40000000,	0x00000000,
	0x00000000,	0x00000000,	0x40400000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x0000005B,	0x00000006,	0x00000009,	0x00000000,	0x00000008,	0x00000062,	0x00000005,	0x00000009,
	0x00000000,	0x00000010,	0x00000068,	0x0000000E,	0x00000009,	0x00000000,	0x00000014,	0x00000077,	0x00000006,	0x00000006,
	0x00000000,	0x0000000C,	0x0000007E,	0x00000007,	0x00000009,	0x00000000,	0x00000000,	0x00000086,	0x0000000D,	0x00000009,
	0x00000000,	0x00000004,	0x00000000,	0x0000000B,	0x00000009,	0x00010004,	0x00000000,	0x00000094,	0x0000000A,	0x00000009,
	0x00010004,	0x00000004,	0x0000009F,	0x00000009,	0x00000009,	0x00010004,	0x00000008,	0x00000032,	0x0000000E,	0x00000000,
	0x00020001,	0x00000014,	0x00000041,	0x00000019,	0x0000000E,	0x00020001,	0x0000013C,	0x0000000C,	0x0000000F,	0x0000000E,
	0x00020001,	0x00000018,	0x0000000A,	0x00000010,	0x0000001C,	0x00000015,	0x0000000D,	0x00020001,	0x000000B8,	0x0000000A,
	0x0000000C,	0x505F6C67,	0x7469736F,	0x006E6F69,	0x656C6170,	0x4D657474,	0x69727461,	0x00736563,	0x656C6170,	0x4E657474,
	0x616D726F,	0x74614D6C,	0x65636972,	0x6F6E0073,	0x6556664F,	0x78657472,	0x74696E55,	0x646F4D00,	0x69566C65,	0x72507765,
	0x63656A6F,	0x6E6F6974,	0x7274614D,	0x56007869,	0x65747265,	0x6F430078,	0x00726F6C,	0x746C754D,	0x78655469,	0x726F6F43,
	0x4E003064,	0x616D726F,	0x6557006C,	0x74686769,	0x614D0073,	0x78697274,	0x69646E49,	0x00736563,	0x6E6F7246,	0x6C6F4374,
	0x5400726F,	0x6F437865,	0x3064726F,	0x00000000,};

//checksum generated by simpleCheckSum()
static const unsigned int MatPalVertCheckSum = 30;

static const char* MatPalVertText = 
	"#ifdef GL_ES\n"
	"precision highp float;\n"
	"#endif\n"
	"#define MAX_PALETTE_MATRIX 10\n"
	"#define MAX_VERTEX_UNIT 4\n"
	"\n"
	"uniform mat4 paletteMatrices[MAX_PALETTE_MATRIX];\n"
	"uniform mat3 paletteNormalMatrices[MAX_PALETTE_MATRIX];\n"
	"uniform float noOfVertexUnit;\n"
	"uniform mat4 ModelViewProjectionMatrix ;\n"
	"\n"
	"attribute vec4 Vertex;\n"
	"attribute vec4 Color;\n"
	"attribute vec4 MultiTexCoord0;\n"
	"attribute vec3 Normal;\n"
	"attribute vec4 Weights;\n"
	"attribute vec4 MatrixIndices;\n"
	"\n"
	"varying vec4 FrontColor;\n"
	"varying vec4 TexCoord0;\n"
	"\n"
	"void main()\n"
	"{\n"
	"    vec4 position = vec4(0.0, 0.0, 0.0, 0.0);\n"
	"    vec3 tnormal = vec3(0.0, 0.0, 0.0);\n"
	"    \n"
	"    if (noOfVertexUnit >0.0)\n"
	"    {\n"
	"        position  = Weights.x * (paletteMatrices[int(MatrixIndices.x)] * Vertex);\n"
	"        tnormal = Weights.x * (paletteNormalMatrices[int(MatrixIndices.x)] * Normal);\n"
	"    }\n"
	"    if (noOfVertexUnit > 1.0)   \n"
	"    {\n"
	"        position += Weights.y * (paletteMatrices[int(MatrixIndices.y)] * Vertex);\n"
	"        tnormal += Weights.y * (paletteNormalMatrices[int(MatrixIndices.y)] * Normal);\n"
	"    }\n"
	"    if (noOfVertexUnit > 2.0)\n"
	"    {\n"
	"        position += Weights.z * (paletteMatrices[int(MatrixIndices.z)] * Vertex);\n"
	"        tnormal += Weights.z * (paletteNormalMatrices[int(MatrixIndices.z)] * Normal);\n"
	"    }\n"
	"    if (noOfVertexUnit > 3.0)\n"
	"    {\n"
	"        position += Weights.w * (paletteMatrices[int(MatrixIndices.w)] * Vertex);\n"
	"        tnormal += Weights.w * (paletteNormalMatrices[int(MatrixIndices.w)] * Normal);\n"
	"    }\n"
	"    \n"
	"    // The eye-space vertex position             \n"
	"    \n"
	"    // In matrix palette case, resultant position is in eye space coordinate\n"
	"    // So ModelViewProjectionMatrix will contain projection matrix.\n"
	"    gl_Position = ModelViewProjectionMatrix * position;\n"
	"\n"
	"    FrontColor = Color;\n"
	"    TexCoord0 = MultiTexCoord0;\n"
	"}\n"
	"\n"
	"";

#ifdef GL_HELPERS_INCLUDED
//glHelpers.h must be included BEFORE any of the shader header files. Also make sure you have the latest version of glHelpers.h
static ghShader MatPalVertShader(MatPalVertText, MatPalVert, MatPalVertLength, MatPalVertCheckSum);


#endif


#endif //_MatPalVert_h_
